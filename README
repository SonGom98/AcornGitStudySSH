깃허브 스터디 프로젝트
1. README 파일 생성

2. git status : 상태를 확인하는 명령어
-> Untracked : 저장소에서 참조하지 않은 파일 (New File)
->nothing to commit, working tree clean : 작업이력과 저장소 이력이 같다.

3. git add README : 해당 파일은 Staging Area 영역(Index)에 추적하는 명령어
-> Staged new file : README : index 에서 해당 파일을 추적하는 중이다.

4. git commit -m "" : index에서 추적하는 내역을 .git(저장소)에 저장하는 명령어

5. README 를 수정 후 저장 : Untracked modified: README
->modified : README : 작업이력과 저장소 이력이 다르다. -> 저장해라!
6. git add README : staged modified: 추적
7. git commit -m ("README 수정 후 저장") 

** 파일 생성 후 저장
untracked -> staged -> committed (clean work directory)
** 파일 수정 후 저장
modified -> staged -> unmodified(committed)

git init : git 저장소를 생성 (.git 포함하는 모든 하위폴더는 모두 저장소에서 관리)
git diff or git file [파일명] : 작업내역과 저장소의 이력을 비교해서 보여주는 명렁어
git diff --staged : 추적하는(index) 내역과 저장소의 이력을 비교해서 보여주는 명령어
git add . , * [파일명] : 작업내역을 index에서 추적하는 명령어 (. : 하위 폴더와 숨김폴더
에 있는 모든 파일, * : 이전에 추가한적이 있었던 모든 파일(새로운 파일 제외))
git commit -m "" : index에서 추적하는 내역을 저장하는 명령어
git commit -a -m "" : git add * + git commit -m "" : 추적과 저장이 합쳐진 명령어
git reset HEAD <file> : 추적하는 파일을 추적하지 않는 상태로 변경
.gitignore : 파일을 작성하면 index에서 감시하지 않을 파일이나 폴더를 추가할 수 있다.
(컴퓨터나 편집기 설정파일을 제외한다, git 프로젝트 안에 다른 프로젝트가 있을때)